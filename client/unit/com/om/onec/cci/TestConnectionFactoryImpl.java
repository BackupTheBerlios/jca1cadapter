/* Generated by Together */

package unit.com.om.onec.cci;

import junit.framework.*;
import junitx.framework.*;

import com.om.onec.spi.*;
import com.om.onec.cci.*;
import com.om.onec.*;
import com.linar.jintegra.*;

import java.io.IOException;

import javax.resource.ResourceException;

public class TestConnectionFactoryImpl extends TestCase{
    private ManagedConnectionFactoryImpl mcf;
    private DefaultConnectionManager dcm;
    private ConnectionFactoryImpl cf;

    public TestConnectionFactoryImpl(String name) {
        super(name);
    }

    public void setUp() throws ResourceException, IOException {
        com.linar.jintegra.Cleaner.trackObjectsInCurrentThread();
	    com.linar.jintegra.AuthInfo.setThreadDefault((new AuthProperties()).getAuthInfo());

        mcf = new ManagedConnectionFactoryImpl();

        OneCDBProperties dbp = new OneCDBProperties();

        mcf.setDbPath(dbp.getDBPath());
        mcf.setUserName(dbp.getUserName());
        mcf.setPassword(dbp.getPassword());

        dcm = new DefaultConnectionManager();

        cf = new ConnectionFactoryImpl(dcm, mcf);
    }

    public void tearDown() {
        com.linar.jintegra.Cleaner.releaseAllInCurrentThread();
	    com.linar.jintegra.AuthInfo.setThreadDefault(null);

        mcf=null;
        dcm=null;
        cf=null;
    }

    public void testGetConnection() throws ResourceException{
        assertNotNull("Unable to create connection", cf.getConnection());
    }

    public void testGetRecordFactory() throws ResourceException {
        assertNotNull("Unable to create record factory", cf.getRecordFactory());
    }
}
