/* Generated by Together */

package unit.com.om.onec.cci;

import junit.framework.*;
import junitx.framework.*;

import com.om.onec.spi.*;
import com.om.onec.cci.*;
import com.om.onec.*;

import onec.IDispatchProxy;

import javax.resource.ResourceException;

import java.util.*;
import java.io.IOException;

public class TestInteractionImpl extends TestCase {
    private InteractionImpl i;
    private InteractionSpecImpl is;
    private ManagedConnectionFactoryImpl mcf;
    private MappedRecordImpl mr;
    private ConnectionFactoryImpl cf;
    private ConnectionImpl c;

    public TestInteractionImpl(String name) {
        super(name);
    }

    public void setUp() throws IOException, ResourceException {
      	com.linar.jintegra.Cleaner.trackObjectsInCurrentThread();
	  	com.linar.jintegra.AuthInfo.setThreadDefault((new AuthProperties()).getAuthInfo());

        mcf = new ManagedConnectionFactoryImpl();
        OneCDBProperties dbp = new OneCDBProperties();

        mcf.setDbPath(dbp.getDBPath());
        mcf.setUserName(dbp.getUserName());
        mcf.setPassword(dbp.getPassword());

        cf = new ConnectionFactoryImpl(new DefaultConnectionManager(), mcf);
        c = (ConnectionImpl)cf.getConnection();

    }

    public void tearDown() {
      	com.linar.jintegra.Cleaner.releaseAllInCurrentThread();
	  	com.linar.jintegra.AuthInfo.setThreadDefault(null);
        mcf=null;
        cf=null;
        c=null;
        is=null;
        i=null;
        mr=null;
    }

    public void testExecute() throws ResourceException {
        is = new InteractionSpecImpl(InteractionSpecImpl.MID_CALL, "EvalExpr");
        is.setDispatchObject((IDispatchProxy)c.getManagedConnection().getClient());

        i = (InteractionImpl)c.createInteraction();

        mr = (MappedRecordImpl)cf.getRecordFactory().createMappedRecord("");

        ResultSetImpl rsi = (ResultSetImpl)mr.get("import");
        ResultSetImpl rse = (ResultSetImpl)mr.get("export");

        String testString = new String("\"Test String\"");
        rsi.updateString("param1", testString);

        i.execute(is, mr, mr);

        String result = (String)rse.getObject("param1");
        System.out.println(result);

        assertNotNull("Execution failed", result);
        assert("Execution failed", !(result.equalsIgnoreCase(testString)));
    }

    public void testClose() throws ResourceException {
        c.close();
    }
}
