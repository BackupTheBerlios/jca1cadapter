/* Generated by Together */

package acceptance;

import Session.*;
import javax.naming.*;
import javax.rmi.PortableRemoteObject;
import junit.framework.*;
import com.om.onec.DocumentDesc;

/** @author Squat Yu. Terentjev */
public class acceptanceTest extends TestCase {
    Object ref;

    public acceptanceTest(String testName) {
        super(testName);
    }

    public static Test suite() {
        TestSuite suite = new TestSuite();
//        suite.addTest(new acceptanceTest("commonTest"));
        suite.addTest(new acceptanceTest("testPrototype"));
        return suite;
    }

    public void setUp() {
        try {
/*            System.setProperty("java.naming.factory.initial", "org.jnp.interfaces.NamingContextFactory");
            System.setProperty("java.naming.provider.url", "localhost:1099");
            System.setProperty("java.naming.factory.url.pkgs", "org.jboss.naming:org.jnp.interfaces");
            InitialContext jndiContext = new InitialContext(System.getProperties());
            System.out.println("Got context");
            ref = jndiContext.lookup("TestConnectorBean");
            System.out.println("Got reference");
*/        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void commonTest() throws Exception {
        TestConnectorHome tch = (TestConnectorHome)PortableRemoteObject.narrow(ref, TestConnectorHome.class);
        TestConnector tc = tch.create();
        System.out.println("Testing 1st connection factory lookup...");
        assertTrue("Failed to lookup 1st connection factory", tc.lookupFactory("java:1CConnector") == true);
        System.out.println("Test 1st connection factory lookup done");
        System.out.println("Testing 1st connection retrieving...");
        assertTrue("Failed to get connection", tc.getConnection() == true);
        System.out.println("Testing 1st connection retreving done");
        System.out.println("Testing 1st connection closing...");
        assertTrue("Failed to close connection", tc.closeConnection() == true);
        Thread.sleep(10000);
        System.out.println("Testing 1st connection closing done");
        tc.remove();
        Thread.sleep(60000);
        TestConnectorHome tch1 = (TestConnectorHome)PortableRemoteObject.narrow(ref, TestConnectorHome.class);
        Thread.sleep(10000);
        TestConnector tc1 = tch1.create();
        assertTrue("Failed to lookup 2nd connection factory", tc1.lookupFactory("java:1CConnector") == true);
        Thread.sleep(10000);
        System.out.println("Test 2nd connection factory lookup done");
        System.out.println("Testing 2nd connection retrieving...");
        assertTrue("Failed to get connection", tc1.getConnection() == true);
        Thread.sleep(10000);
        System.out.println("Testing 2nd connection retreving done");
        System.out.println("Testing 2nd connection closing...");
        assertTrue("Failed to close connection", tc1.closeConnection() == true);
        Thread.sleep(10000);
        System.out.println("Testing 2nd connection closing done");
        tc1.remove();

/*        System.out.println("Testing 2st connection factory lookup...");
        assertTrue("Failed to lookup 2st connection factory", tc.lookupFactory("java:1CConnector") == true);
        Thread.sleep(10000);
        System.out.println("Test 2st connection factory lookup done");
        System.out.println("Testing 2st connection retrieving...");
        assertTrue("Failed to get connection", tc.getConnection() == true);
        Thread.sleep(10000);
        System.out.println("Testing 2st connection retreving done");
        System.out.println("Testing 2st connection closing...");
        assertTrue("Failed to close connection", tc.closeConnection() == true);
        Thread.sleep(10000);
        System.out.println("Testing 2st connection closing done");*/

        Thread.sleep(60000);
    }

    public void testPrototype() throws Exception {
        //Setting environment parameters
       	System.setProperty("java.naming.factory.initial", "org.jnp.interfaces.NamingContextFactory");
       	System.setProperty("java.naming.provider.url", "localhost:1099");
       	System.setProperty("java.naming.factory.url.pkgs", "org.jboss.naming:org.jnp.interfaces");
        //Create initial context
       	InitialContext jndiContext = new InitialContext(System.getProperties());
       	System.out.println("[Client] -> Got context");
       	Object ref = jndiContext.lookup("ClientBean");
       	System.out.println("[Client] -> Got reference");
       	ClientHome ch = (ClientHome)PortableRemoteObject.narrow(ref, ClientHome.class);
       	Client c = ch.create();
       	System.out.println("Client bean was created....");
       	c.getContext();
        DocumentDesc dd = new DocumentDesc();
       	c.testImportData(dd);
    }
}
